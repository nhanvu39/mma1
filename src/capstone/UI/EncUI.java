package capstone.UI;

//Class Imports
import capstone.encryption.Decryption;
import capstone.encryption.Encryption;
import capstone.fileio.FileIO;
import java.awt.Frame;

//Todo:  Possible move all File I/O Operations to File IO class
import java.io.File;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.ObjectOutputStream;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.util.Enumeration;
import java.util.Scanner;


import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.AbstractButton;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JPasswordField;

/**
 *
 * @author Jeremy Blanchard
 * @author Omar Herrera
 */
@SuppressWarnings("serial")
public class EncUI extends javax.swing.JFrame {

    static FileIO fio = new FileIO();

    /**
     * Creates new form EncUI
     */
    public EncUI() {
        initComponents();
    }
    
    public String key = "";
    public String alg = "";

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        encryptPanel = new javax.swing.JPanel();
        decButton = new javax.swing.JButton();
        encButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        infoTextArea = new javax.swing.JTextArea();
        statusLabel = new javax.swing.JLabel();
        fileNameLbl = new javax.swing.JLabel();
        fileTextField = new javax.swing.JTextField();
        fcBtn = new javax.swing.JButton();
        titleLbl = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        decButton.setText("Decrypt");
        decButton.setMaximumSize(new java.awt.Dimension(69, 23));
        decButton.setMinimumSize(new java.awt.Dimension(69, 23));
        decButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                decButtonActionPerformed(evt);
            }
        });

        encButton.setText("Encrypt");
        encButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                encButtonActionPerformed(evt);
            }
        });

        infoTextArea.setColumns(20);
        infoTextArea.setRows(5);
        jScrollPane1.setViewportView(infoTextArea);

        statusLabel.setLabelFor(infoTextArea);
        statusLabel.setText("Status:");

        fileNameLbl.setLabelFor(fileTextField);
        fileNameLbl.setText("File:");

        fileTextField.setEnabled(false);
        fileTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fileTextFieldActionPerformed(evt);
            }
        });

        fcBtn.setText("...");
        fcBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fcBtnActionPerformed(evt);
            }
        });

        titleLbl.setBackground(new java.awt.Color(0, 0, 0));
        titleLbl.setFont(new java.awt.Font("Old English Text MT", 3, 36)); // NOI18N
        titleLbl.setForeground(new java.awt.Color(255, 0, 0));
        titleLbl.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        titleLbl.setLabelFor(this);
        titleLbl.setText("MMA1");

        jButton1.setText("...");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setText("Key:");

        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton1);
        jRadioButton1.setSelected(true);
        jRadioButton1.setText("AES");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        buttonGroup1.add(jRadioButton2);
        jRadioButton2.setText("SHA");

        buttonGroup1.add(jRadioButton3);
        jRadioButton3.setText("MD5");

        javax.swing.GroupLayout encryptPanelLayout = new javax.swing.GroupLayout(encryptPanel);
        encryptPanel.setLayout(encryptPanelLayout);
        encryptPanelLayout.setHorizontalGroup(
            encryptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encryptPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(encryptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(encryptPanelLayout.createSequentialGroup()
                        .addGap(8, 8, 8)
                        .addComponent(statusLabel)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(titleLbl, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
            .addGroup(encryptPanelLayout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(encryptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(encryptPanelLayout.createSequentialGroup()
                        .addGroup(encryptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(encryptPanelLayout.createSequentialGroup()
                                .addComponent(encButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(encryptPanelLayout.createSequentialGroup()
                                .addComponent(jRadioButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(121, 121, 121)
                                .addComponent(jRadioButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(105, 105, 105)))
                        .addGroup(encryptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(encryptPanelLayout.createSequentialGroup()
                                .addComponent(jRadioButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGap(12, 12, 12))
                            .addComponent(decButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, encryptPanelLayout.createSequentialGroup()
                        .addGroup(encryptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(fileNameLbl)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(encryptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(encryptPanelLayout.createSequentialGroup()
                                .addComponent(jTextField1)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1))
                            .addGroup(encryptPanelLayout.createSequentialGroup()
                                .addComponent(fileTextField)
                                .addGap(18, 18, 18)
                                .addComponent(fcBtn)))))
                .addGap(43, 43, 43))
        );
        encryptPanelLayout.setVerticalGroup(
            encryptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(encryptPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(titleLbl, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(encryptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(fileNameLbl)
                    .addComponent(fileTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(fcBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(encryptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jLabel1)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                .addGroup(encryptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3))
                .addGap(18, 18, 18)
                .addGroup(encryptPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(encButton)
                    .addComponent(decButton, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(39, 39, 39)
                .addComponent(statusLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(encryptPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(13, 13, 13))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(encryptPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents



    private void decButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_decButtonActionPerformed
        String output;
        infoTextArea.append("\nAction Selected:    Decrypt File");
        String pw = key;
        if(!pw.equals("") && (!fileTextField.getText().equals(""))){
            try {
                Enumeration elements = buttonGroup1.getElements();
                while (elements.hasMoreElements()) {
                  AbstractButton button = (AbstractButton)elements.nextElement();
                  if (button.isSelected()) {
                    alg = button.getText();
                  }
                }
                infoTextArea.append("\nDecrypting File...");
                output = Decryption.decrypt(fio.getEncFile(), pw, alg);
                infoTextArea.append("\nDecryption Successful");
                infoTextArea.append("\nOutput File Name:    \n" + output);
            } catch (Exception ex) {
                Logger.getLogger(EncUI.class.getName()).log(Level.SEVERE, null, ex);
            }
        }else{
            infoTextArea.append("\nNo Key or Filepath!\nFile Decryption Cancelled");
        }

        cleanup();        

    }//GEN-LAST:event_decButtonActionPerformed

    private void encButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_encButtonActionPerformed
       
        String output;
        infoTextArea.append("\nAction Selected:   Encrypt File");
        String pw=key;
        
        if(!pw.equals("") && (!fileTextField.getText().equals(""))){
            try {
                Enumeration elements = buttonGroup1.getElements();
                while (elements.hasMoreElements()) {
                  AbstractButton button = (AbstractButton)elements.nextElement();
                  if (button.isSelected()) {
                    alg = button.getText();
                  }
                }
                infoTextArea.append("\nEncrypting File...");
                output = Encryption.encrypt(fio.getDecFile(), pw, alg);
                infoTextArea.append("\nEncryption Successful");
                infoTextArea.append("\nOutput File Name: " + output);
            } catch (Exception ex) {
                infoTextArea.append("\nFile Encryption Failed: " + ex);
            }
        }else{
            infoTextArea.append("\nNo Key or Filepath!\nFile Encryption Cancelled");
        }

        cleanup();

    }//GEN-LAST:event_encButtonActionPerformed

     /**
     * This method obtains a password from the user using a JPasswordField in a
     * JOptionPane confirmDialog.  The password entry is masked to the user.  The entered data is entered into a character array.
     *
     * @return the value entered by the user
     */
    
    private void fcBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fcBtnActionPerformed
        File file = selectFile();
        if(file!=null){
            fio.setEncFile(file);
            fio.setDecFile(file);
            infoTextArea.append("\nFile Selected:  " + file.getName());
            fileTextField.setText(file.getAbsolutePath());
        }else{
            infoTextArea.append("\nFile Selection Cancelled");
        }        
    }//GEN-LAST:event_fcBtnActionPerformed

    private void fileTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileTextFieldActionPerformed
        Path path = Paths.get(fileTextField.getText()).toAbsolutePath();
        infoTextArea.append("\n Selected File Path:"+path.toString());
        if (Files.exists(path)) {
//            if (fio.isEncrypted(path)) {
//                encButton.setEnabled(false);
//                fio.setEncFile(path);                
//            } else {
//                decButton.setEnabled(false);
//                fio.setDecFile(path);
//            }
            fio.setEncFile(path);
            fio.setDecFile(path);
        } else {
            infoTextArea.append("***Error:  File cannot be found, please check that the correct location was entered. ***");
        }

    }//GEN-LAST:event_fileTextFieldActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        String ext = "";
        JPanel panel = new JPanel();
        File file = null;
        while (!"txt".equals(ext)){
            file = selectFile();
            String[] tokens = file.toString().split("\\.(?=[^\\.]+$)");
            ext = tokens[tokens.length-1];
            if (!"txt".equals(ext)){
                JOptionPane.showMessageDialog(panel, "Please select a txt file for key", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
        
        try {
            key = new Scanner(file).useDelimiter("\\Z").next();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(EncUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        if(file!=null){
            infoTextArea.append("\nKey Selected:  " + file.getName());
            jTextField1.setText(file.getAbsolutePath());
        }else{
            infoTextArea.append("\nKey Selection Cancelled");
        }        
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
        Path path = Paths.get(jTextField1.getText()).toAbsolutePath();
        infoTextArea.append("\n Selected Key Path:"+path.toString());
        if (Files.exists(path)) {
            if (fio.isEncrypted(path)) {
                encButton.setEnabled(false);
                fio.setEncFile(path);                
            } else {
                decButton.setEnabled(false);
                fio.setDecFile(path);
            }
        } else {
            infoTextArea.append("***Error:  File cannot be found, please check that the correct location was entered. ***");
        }
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    

    /**
     * This method instantiates a JFileChooser and returns the File object
     * selected by the user
     *
     * @return The File Object selected
     */
    public File selectFile() {
        JFileChooser fc = new JFileChooser();
        int action = fc.showOpenDialog(null);
        if(action==JFileChooser.APPROVE_OPTION){
            return fc.getSelectedFile();
        }else{
            return null;
        }               
        
    }

    /**
     * This is the main method of the program
     * 
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException | InstantiationException | IllegalAccessException | javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EncUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new EncUI().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton decButton;
    private javax.swing.JButton encButton;
    private javax.swing.JPanel encryptPanel;
    private javax.swing.JButton fcBtn;
    private javax.swing.JLabel fileNameLbl;
    private javax.swing.JTextField fileTextField;
    private javax.swing.JTextArea infoTextArea;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JLabel statusLabel;
    private javax.swing.JLabel titleLbl;
    // End of variables declaration//GEN-END:variables

    private void cleanup() {
        fileTextField.setText("");
        decButton.setEnabled(true);
        encButton.setEnabled(true);
        fio.cleanup();
    }
    
}
